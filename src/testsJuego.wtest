import wollok.game.*
import jugador.*
import objects.*
import portal.*
import juego.*

describe "posicionamiento inicial de personaje y perseguidor" {
	test "el perseguidor estará ubicado en la misma Y que el personaje" {
		assert.equals(perseguidor.position().y(),personaje.position().y())
	}
	
	test "la posición inicial del jugador es en x=5, y=2" {
		assert.equals(personaje.position().x(),5)
		assert.equals(personaje.position().y(),2)
	}
}

describe "Estrellas"{
	test "Agregar estrella si todavía no alcanzo el puntaje necesario para ganar"{
	const estrellitaTest = new Estrella(modo = modoMenor, imagen = "strellaAzul.png")
	personaje.coleccionarEstrella(estrellitaTest)
	assert.equals(10, personaje.puntaje())
	}
	//test "Cuando el personaje alcanza el puntaje gana el juego"{}
}

describe "Cambio de imagenes"{
	
	const portalAEspacio = new Portal(imagen = espacio.imagenPortal())
	const portalACiudad = new PortalEspacio(imagen = calle.imagenPortal())
	
	
	test "Al pasar al espacio, el jugador pasa de ser autoPersonaje a ser navePersonaje"{
		game.addVisual(portalAEspacio)
		portalAEspacio.chocarCon(personaje)
		assert.equals("navePersonaje.png", personaje.image())
		
	}
	test "Al pasar al espacio, el perseguidor pasa de ser autoPolicia a ser navePerseguidor"{
		game.addVisual(portalAEspacio)
		portalAEspacio.chocarCon(personaje)
		assert.equals("navePerseguidor.png",perseguidor.image())
	}
	test "Al pasar a la ciudad, el jugador pasa de ser navePersonaje a ser autoPersonaje"{
		game.addVisual(portalAEspacio)
		game.addVisual(portalACiudad)
		portalAEspacio.efectoAlChocar(personaje)
		portalACiudad.efectoAlChocar(personaje)
		assert.equals("autoPersonaje.png", personaje.image())
	}
	test "Al pasar a la ciudad, el perseguidor pasa de ser navePerseguidor a ser autoPolicia"{
		game.addVisual(portalAEspacio)
		game.addVisual(portalACiudad)
		portalAEspacio.efectoAlChocar(personaje)
		portalACiudad.efectoAlChocar(personaje)
		assert.equals("autoPolicia.png", perseguidor.image())
	}
}


  describe "Movimientos del personaje al chocar con los obstáculos"{
	
	test "El personaje se mueve una posicion al chocar con un objeto pequeño"{
		const objetoChico = new ObjetoChico(imagen = calle.objChico())
		game.addVisual(objetoChico)
		objetoChico.chocarCon(personaje)
		assert.equals(personaje.position().x(), 4)
	}
	
	test "El personaje no debería moverse ni más ni menos de 1 posición"{
		const objetoChico = new ObjetoChico(imagen = calle.objChico())
		game.addVisual(objetoChico)
		objetoChico.chocarCon(personaje)
		assert.notThat(personaje.position().x() == 3)
	}
	test "El personaje se mueve 2 posiciones al chocar con un objeto mediano"{
		const objetoMediano = new ObjetoMediano(imagen = calle.objMediano())
		game.addVisual(objetoMediano)
		objetoMediano.chocarCon(personaje)
		assert.equals(personaje.position().x(), 3)
	}
		test "El personaje no debería moverse ni más ni menos de 2 posiciones"{
		const objetoMediano = new ObjetoMediano(imagen = calle.objMediano())
		game.addVisual(objetoMediano)
		objetoMediano.chocarCon(personaje)
		assert.notThat(personaje.position().x() == 5)

}}

